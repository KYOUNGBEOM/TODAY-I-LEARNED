#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include<string.h>


#define MAX 10000
int main(void) {
	//fgets, fputs 활용
	char line[MAX]; // 파일에서 불러온 내용을 저장할 변수
	char contents[MAX]; // 일기장에 입력한 내용
	char password[20] = ""; // 비밀번호 입력
	unsigned c; // (비밀번호 입력 할 때 키값 확인용)
	char name[MAX];

	printf("비밀일기장입니다.\n\n");
	printf("비밀번호를 입력하세요 : ");

	// getchar() / getch()의 차이 ?
	// getchar() 는 엔터를 입력받아야 동작
	// getch () 는 키 입력시 바로바로 동작
	int i = 0;
	while (1) {
		c = getch();
		if (c == 13) { // enter -> 비밀번호 입력 종료
			password[i] = '\0'; // NULL
			break;
		}
		else if (c == 8) {// 백스페이스
			if (strlen(password) != 0) {
				printf("\b \b");
				password[strlen(password) - 1] = '\0';
				i--;
			}
		}
		else {
			printf("*");
			password[i] = c;
			i++;
		}
	}

	// 비밀번호 : pass
	printf("\n\n----------비밀번호 확인중----------\n\n");
	if (strcmp(password, "pass") == 0) {
		printf("----------비밀번호 확인완료----------");

		char* fileName = "C:/Users/82107/Desktop/text1.txt";
		//char* fileName = "C:/Test/text1.txt";
		FILE* file = fopen(fileName, "a+b"); // 파일이 없으면 생성, 파일이 있으면 append를 한다.(뒤에서부터 내용을 추가)
		if (file == NULL) {
			printf("파일 열기 실패\n");
			return 1;
		}
		printf("\n\n");
		while (fgets(line, MAX, file) != NULL) {
			printf("%s", line);
		}

		printf("\n내용을 계속 작성하세요! 종료하시려면 EXIT를 입력하세요\n\n");

		while (1) {
			scanf("%[^\n]", contents);
			while (getchar() != '\n'); // Enter 입력(\n)  Flush 처리

			if (strcmp(contents, "EXIT") == 0) {
				printf("비밀일기 입력을 종료합니다.\n\n");
				break;
			}
			fputs(contents, file);
			fputs("\n", file); // Enter를 위에서 무시 처리하였으므로 임의로 추가

			fclose(file);
		}
	}
		else {
			printf("비밀번호가 틀렸습니다.\n\n");
		}

	return 0;
}
