// 내 풀이1
#include <iostream>

using namespace std;

int N, K;
long long tmp[100000];
int sum;

int main() {
	cin >> N >> K;
	for (int i = 0; i < N; i++) {
		cin >> tmp[i];
	}

	int max = 0;
	for (int i = 0; i < N - K + 1; i++) {
		for (int j = 0; j < K; j++) {
			sum += tmp[i + j];
		}
		if (sum > max) max = sum;
		sum = 0;
	}
	
	cout << max;

	return 0;
}
----> 시간 초과 발생

// 내 풀이2
#include <iostream>
#include <algorithm>

using namespace std;

int N, K, psum, ret = -10000004, tmp[100000];

int main() {
	cin >> N >> K;
	for (int i = 0; i < N; i++) {
		cin >> tmp[i];
	}

	for (int i = 0; i < N - K + 1; i++) {
		for (int j = 0; j < K; j++) {
			psum += tmp[i + j];
		}
		ret = max(ret, psum);
		psum = 0;
	}

	cout << ret;

	return 0;
}
----> 시간 초과 발생

// 강의 풀이
#include <iostream>

using namespace std;

int n, k, temp, psum[100001], ret = -10000004;

int main() {
	cin >> n >> k;
	for (int i = 1; i <= n; i++) {
		cin >> temp;
		psum[i] = psum[i - 1] + temp;
	}
	for (int i = k; i <= n; i++) {
		ret = max(ret, psum[i] - psum[i - k]);
	}
	cout << ret << "\n";

	return 0;
 }

// 최대값을 구하라고 하면 최솟갑부터 최대값
// 최솟값을 구하라고 하면 최대값부터 최솟값
// 이 문제의 최솟값은? -100도가 10만-1개 = -100 * 10만 = 약 -10000000만
// 온도의 합이 최대가 되는 값 : 구간합 prefix sum, psum[i] = psum[i-1]+a[i]
