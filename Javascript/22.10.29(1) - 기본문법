변수
- 값을 저장하는 영역

변수 사용 목적
- 변수에 저장된 값의 재사용

변수 선언 방법
- 콤마로 구분하여 한 문장에서 다수 작성 가능
- 콤마로 구분하여 줄을 바꾸어 작성 가능

시맨틱(sematic) 
- 의미를 부여하여 변수 이름을 작명하는 것
- 변수의 이름은 자세 할수록 좋음

변수에 값 할당 방법
- var point = 123, point 456; 
- var ponint = amount = 123;

주석
- 주석은 JS 코드로 인식하지 않음
- 한 줄 주석 //
- 블록 주석 /*...*/, /**...*/

Js스펙(Specifiacation)
- 자바스크립트 문법을 작성한 문서
- ES3, ES5 는 JS 스펙의 에디션(Edition)

console.log(..data);
- 소괄호 안에 작성된 값을 브라우저 콘솔 창에 출력
- 문자, 숫자 등을 출력
- 콤마로 구분하여 다수 작성 가능
- 소괄호 안에 작성한 값을 파라미터 값이라고 부름
- JS 제공하는 것이 아니라 Console API에서 제공

정수
- 소수가 없는 숫자
- 123, -123

실수
- 소수를 가진 숫자
- 1.23, 1.0

JS는 정수와 실수를 구분하지 않음
- IEEE 754 표준
- 1, 1.0 모두 1.0으로 간주(단, 표시는 1로 표시)
- 64비트(Bit) 부동소수점 처리(123은 123.0으로 처리)
- ES6에서 정수, 실수 구분 추가

상수
- 변경할 수 없는 값

상수 변수
- 상수가 설정된 변수
- JS는 변수의 값을 변경할 수 있으므로 상수 변수는 선언적 의미
- JS가 제공하는 상숫값은 변경 불가능 : MAX_VALUE, MIN_VALUE 등

상수 변수 표기 방법
- 코딩 관례로 영문 대문자 사용
- var ONE = 1;
- 상수로 사용한다는 시맨틱 사용

진수 
- 10진수 : 123
- 16진수
  1. 1번째 숫자 0작성
  2. 2번째 숫자 x작성
  3. 3번째 숫자 이후 0 ~ f 작성
  4. 대소문자 구분하지 않음
  5. 0x는 16진수를 나타내므로 값이 아니며 A:10, B:11, C:12, D:13, E:14, F:15
  6. 0xf:15, oxff(16*15+15) = 255, oxfff(16*15*15+16*15+15) = 4095
- 8진수 
  1. ES3에서 폐지, ES6 재정의
- 2진수(머신러닝, 딥러닝에서 사용)
  1. ES6에서 특별한 방법 제공
  2. bit, 0또는 1을 가짐
  
  데이터(Data)
  - 사전적 의미는 자료
  - 숫자타입 var point = 123;
  - 문자타입 var book = "책";
  
  typeof연산자
  - 데이터 타입 반환
  - typeof 데이터 작성
  
  키워드(keyword)
  - 특별한 기능을 가진 단어
  
  데이터 타입
  - 자료형이라고도 부름
  - 데이터는 타입을 가짐
    1. JS 데이터를 기준으로 타입을 결정
    2. 할당되는 데이터에 따라 타입이 결정
    
  데이터 타입 분류
  - 언어 타입과 스펙 타입
  - 언어 타입
    1. JS 프로그램에서 사용할 수 있는 타입
    2. Undefined, Null, Boolean, String, Number, Object
  - 스펙(문서) 타입
    1. 언어 알고리즘을 위한 타입으로 JS 프로그램에서 사용 불가
  - Number 타입
    1. 부호를 가진 값
    2. 숫자 값 범위(2의 64승 - 2의 35승 +3) 
    3. 특수한 3개 값 : NaN(Not-a-Number), Infinity, -Infinity
  - String 타입
    1. 값을""또는''사이에 작성
    2. 최대 문자수: 2의 35승 -1
    3. 따옴표에 숫자를 작성하면 문자 타입이 됨
  - Undefined 타입
    1. Undefined(대문자)타입 - 스펙에서 사용하는 타입
    2. undefined(소문자)타입 - 값
    3. 변수의 default 값
    4. 변수에 값을 할당하지 않은 것을 나타내는 시맨틱
    5. 변수에 undefined 할당 가능
  - Null 타입
    1. Null(대문자)타입 - 스펙에서 사용하는 타입
    2. null(소문자)타입 - 값
    3. null을 할당해야 값이 null이 됨
  - Boolean 타입
    1. 값: true, false
  - Object 타입
    1. Object(대문자)타입 {key: value}
    2. name과 value를 프로퍼티라고 부름.
    3. Object는 프로퍼티 집합
