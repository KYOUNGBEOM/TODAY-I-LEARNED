문장
- 형태: 세미콜론(;)
- 문장을 끝나게 하는 역할

화이트 스페이스
- 사람 눈에 보이지 않는 문자(가독성을 위해서)
- 문자마다 기능을 갖고 있음
- TAB(\u0009), Space(\u0020), NBSP(\u00A0)


세미콜론 자동삽입
- 문장 끝에 작성
- JS엔진이 분석하여 자동으로 삽입(ES5부터 지원)
  var one = 1
  var two = 2;
  log(one); // 1
  
 블록
 - 형태: {문장 리스트opt}
 - 중괄호 { }, 실행 그룹으로 블록 안의 모든 문장 실행
 - 문장 리스트 작성은 선택
  
 if
 - if(표현식) 문장1
 - if(표현식) 문장1 else 문장2
 - 먼저 표현식을 평가 
 - 평가 결과를 true/false로 변환
  
 debugger
 - debugger 위치에서 실행 멈춤
 - 브라우저의 개발자 도구 창이 열려있을 때만 멈춤
 - ES5부터 지원
   
 while 
 - 형태: while(표현식) 문장
 - 표현식의 평가 결과가 false가 될 때까지 반복 실행
   
 do ~ while
 - 형태: do 문장 while(표현식)
 - 처리방법은 while문과 같음
   var k = 0;
   do {
     log("do:", k);
     k++
   } while ( k < 3){
      log("while:", k);
   }; // do:0 do:1 do:2 while:3
   1. do문을 실행 
   2. while 문 표현식 평가
   3. true이면 do문 실행, false이면 while 블록문 실행
    
   for ( )  
   - 형태: for(초기값opt; 비교opt; 증감opt;) 문장
   - 2번째 비교 표현식의 평가 결과가 true인 동안 문장을 반복 실행
     1. 증감 생략 코드
        for(var k = 0; k < 3;){
         log(k);
         k++
        }
      2. 초기값과 증감 생략 코드
         var k = 0;
         for(; k < 3;){
          log(k);
          k++
         };
         for 문에 초기값을 작성하지 않더라도 ; 은 작성해야 함                     
      3. 비교와 증감 생략 코드
         for(var k = 0; ;){
          log(k);
          k++;
          if(k > 2){
           break;
          };
         };
      4. 모두 생략
         var k = 0;
         for( ; ; ){
          log(k);
          if(k == 2){
           break; // for문 종료
          };
          k++
         }; // 0 1 2 
   
